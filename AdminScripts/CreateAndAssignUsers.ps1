<#
#Comments generated by GitHub CoPilot

.SYNOPSIS
    This script creates and assigns users to devices using a Function App API.

.DESCRIPTION
    The script takes the following parameters:
    - FunctionAppURI: The URI of the Function App API.
    - DeviceSerialNumbers: An array of device serial numbers.
    - SkipIntuneAssignment: A switch parameter to skip Intune assignment.
    - SkipAutopilotAssignment: A switch parameter to skip Autopilot assignment.

    The script creates a new user for each device serial number provided and assigns the user to the device.
    If an error occurs during assignment due to the absence of an Intune license, the script waits for 10 seconds and retries until the license is available.

.PARAMETER FunctionAppURI
    The URI of the Function App API.

.PARAMETER DeviceSerialNumbers
    An array of device serial numbers.

.PARAMETER SkipIntuneAssignment
    A switch parameter to skip Intune assignment.

.PARAMETER SkipAutopilotAssignment
    A switch parameter to skip Autopilot assignment.

.OUTPUTS
    The script outputs a collection of objects representing the assigned users and their associated devices.
    Each object contains the following properties:
    - UserPrincipalName: The user principal name of the assigned user.
    - SerialNumber: The serial number of the associated device.
    - Result: The result of the assignment operation.
    - TotalTime: The total time taken for the assignment operation in seconds.

.EXAMPLE
    .\CreateAndAssignUsers.ps1 -FunctionAppURI "https://example.com/api" -DeviceSerialNumbers "123456", "789012" -SkipIntuneAssignment

    This example creates and assigns users to devices with the serial numbers "123456" and "789012" using the Function App API at "https://example.com/api".
    The Intune assignment step is skipped.

.NOTES
    Author: Adam Gross - @AdamGrossTX
    GitHub: https://github.com/AdamGrossTX/ManagedUserManagement

#>

Param(
    [string]$FunctionAppURI,
    [string[]]$DeviceSerialNumbers,
    [switch]$SkipIntuneAssignment,
    [switch]$SkipAutopilotAssignment
)

$UserToDeviceMap = foreach ($SerialNumber in $DeviceSerialNumbers) {
    try {
        Write-Host "Creating new user for device with serial number: $($SerialNumber)" -NoNewline -ForegroundColor Cyan
        $Response = Invoke-RestMethod -Uri "$($FunctionAppURI)/api/NewManagedUser?DeviceSerialNumber=$($SerialNumber)"
        [PSCustomObject]@{
            UserPrincipalName = $Response.Name
            SerialNumber      = $SerialNumber
        }
        Write-Host " - Done" -ForegroundColor Green
    }
    catch {
        $_
    }
}

$Results = foreach ($Obj in $UserToDeviceMap) {
    $StartTime = Get-Date
    do {
        try {
            Write-Host "Assigning user $($Obj.UserPrincipalName) to device $($Obj.SerialNumber)" -NoNewline -ForegroundColor Cyan
            $URI = "$($FunctionAppURI)/api/AssignManagedUser?DeviceSerialNumber=$($Obj.SerialNumber)&UserPrincipalName=$($Obj.UserPrincipalName)&SkipIntuneAssignment=$($SkipIntuneAssignment.IsPresent)&SkipAutopilotAssignment=$($SkipAutopilotAssignment.IsPresent)"
            $Response = Invoke-WebRequest -Uri $URI
            $result = $Response.Content
        }
        catch {
            $result = $Response.Content
            if($_.ErrorDetails.Message -like "Error - No Intune license found*") {
                Write-Host ""
                Write-Host " --- Waiting for Intune license for user $($Obj.UserPrincipalName) and device $($Obj.SerialNumber). Sleeping 10 seconds."
                Start-Sleep -Seconds 10
            }
            else {
                Write-Host ""
            }
        }
        finally {
            $Obj | Add-Member -MemberType NoteProperty -Name Result -Value $result -Force
            Write-Host " - Done" -ForegroundColor Green
        }
        
    } until ($result -notlike "Error - No Intune license found*")
    $EndTime = Get-Date
    $TotalTime = ($EndTime - $StartTime).TotalSeconds
    $Obj | Add-Member -MemberType NoteProperty -Name TotalTime -Value $TotalTime -Force -PassThru
}

$Results